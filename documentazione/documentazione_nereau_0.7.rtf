{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 documentazione del sistema esistente\
DAO %%%%%%%%%%%%%%%%%%%%%\
Gli UserDAO, ProfileDAO, etc sono interfacce che vengono implementate da classi UserDAOPostgres, *DAOPostgres, etc. \
I DAOPostgres implementano le funzioni che sono necessarie alla query del db, etc. per esempio, UserDAOPostgres ha \
public User authenticateUser(string, string)\
che fa query al db e restituisce l'utente autenticato. \
In conclusione, ha praticamente le operazioni CRUD per l'oggetto utente. \
Si usano i prepared statement, delle stringhe final per fare query al db in modo sicuro. \
\
FACADE %%%%%%%%%%%%%%%%%%%%%\
UserFacade, UserModelFacade invece incapsulano le operazioni che sono offerte dai livelli di astrazione pi\'fa bassi. Gestiscono per\'f3 le eccezioni lanciate dai metodi dei vari UserDAO, UserModelDAO, etc  con try-catch\
Ha come attributo private e static la sua stessa istanza, che si ottiene con public static synchronized getInstance. La classe UserFacade si occupa che esista solo una classe che gestisca il salvataggio/autenticazione/edit delle propriet\'e1/aggiornamento dell'utente sul db, evitando inconsistenze. \
\
static \'e9 per indicare i metodi di classe, accessibili e visibili da tutte le istanze della classe UserModelFacade. \
synchronized serve: \
1 per evitare che due chiamate al metodo synchronized si intreccino (sovrappongano). il primo esegue il metodo, e il secondo aspetta fino al termine in sospensione e poi prosegue. \
2 quando un metodo synchronized termina, accade sempre prima di una qualsiasi successiva invocazione del metodo synchronized, rendendo visibili i cambi di stato dell'oggetto a tutti i thread successivi. \
Insomma: interferenza tra thread e consistenza della memoria. \
\
\
MainServer %%%%%\
accetta connessioni su una certa porta dove resta in ascolto, e lancia un thread NereauCommandServer(clientSocket) che serve la connessione messa in piedi. \
\
NereauCommandServer(socket clientsocket) %%%%%\
\'e9 il thread che serve le connessioni. \
Dalle stringhe che riceve sul buffer costruisce con new JSONObject(line), che poi separa in cmd e args. \
a seconda del tipo di comando, istanzia un executor diverso, uno adeguato ad ogni tipo di azione. (expand, save_visited_url, update, login, update_all, save_user, etc etc). Le azioni sono inviate dalle pagine php che si trovano sul server, a seconda delle pagine e dei click fatti dall'utente. \
Le azioni pi\'fa interessanti sono (expand; save_visited_url; update; update_all; save_user; update_user)\
successivamente si ottiene una risposta dall'executor lanciato e si stampa la risosta come JSONResponse. poi si chiudono i buffer e la socket. \
\
CommandExecutor %%%%\
tutti gli esecutori estendono questa classe astratta abstract, il cui metodo principale \'e9 getJSONResponse(). Ognuno si costruisce la sua risposta, chiamando il comando adatto sull'oggetto nereau che \'e9 un attributo protected della classe CommandExecutor. Quando si crea il ExpandExecutor, si fa super(args), che sarebbe il costruttore della classe astratta CommandExecutor \
\pard\pardeftab720\ql\qnatural
\cf0 public CommandExecutor(JSONObject args) \{\
		this.args = args;\
		this.nereau = Nereau.getInstance();\
	\}\
che richiama Nereau.getInstance() per avere l'istanza di nereau che sta girando (il server)\
Ha un metodo standard per la costruzione della risposta JSON standard, usato in caso di errore o casi particolari (no db, query non espansa, etc... )\
\
\
Nereau %%%%%%\
ha un metodo\
public static synchronized Nereau getInstance() che restituisce una e una sola istanza, sempre la stessa, del server di nereau. \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 il metodo di nereau che viene chiamato dall'expandExecutor \'e9 Set<ExpandedQuery> expQueries nereau.expandQuery(queryString, user)\
\
}