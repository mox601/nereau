appunti su configurazione del postgresql


Restore del Dump
devi prima creare l'utente per cui si fa il grant nel database
user web81_nereau 
password nereau

serve a nereau
user postgres
password prova

per login su phppgadmin: 
user postgresuser
password postgres

creazione delle tabelle sul database fatto tramite upload dell'sql con phppgadmin4.2.2
(phppgadmin non puó avere postgres come utente)


DB schema

Tabelle: 
classes(id, idterm, idtag, iduser, value)
cooccurrences(id, idclass, idterm, value)
stemmedterms(id, stemmedterm)
tags(id, tag)
terms(id, idstemmedterm, term, relevance)
users(id, username, password, lastupdate, firstname, lastname, email, role)
visitedurls(id, iduser, url, query, expandedquery, date)
visitedurltags(id, idvisitedurl, idtag, value)
votes(idvote, iduser, query, expandedquery, tags)

Utilizzo delle tabelle, come letto nella tesi

Le tabelle peró sono vuote... 
come lavorare su dei dati?
1- dump del db online nereau.eunetwork.net per lavorare in locale su quei dati, periodicamente aggiornati ma comunque copiati su postgres locale. 
2- lavorare in remoto, usando quel db in tutto e per tutto. 
Meglio 1. 

il codice é tutto organizzato con pattern Facade
A facade is an object that provides a simplified interface to a larger body of code
incapsula cioé parti complesse di codice e fornisce un'interfaccia semplificata. 




connessione a sito remoto
nereau.eunetwork.net
ssh web81_nereau@nereau.eunetwork.net -p 4422
web81_nereau
nereauroma3


dump del database in remoto
pg_dump --file=<nome_file>.sql --format=p --no-owner --inserts --encoding=LATIN9

riga di comando per scaricare file da remoto: 
scp -P 4422 web81_nereau@nereau.eunetwork.net:web/<file_remoto> <file_locale>
aaa


Passi della tesi
Nereau non riconosce le relazioni tra i tags. La creazione delle diverse espansioni della query dipende dalle singole espansioni che vengono generate da ogni singolo tag: se due tag producono la stessa espansione EQ1, con gli stessi termini, allora vengono messi in relazione (comparendo nell'etichetta laterale nell'interfaccia web). 

Concettualmente la relazione tra due tag é evidenziata a posteriori rispetto all'elaborazione (solo se producono lo stesso risultato), e non prima, durante la stessa. 

Soluzione
Per produrre espansioni con qualitá piú elevata, si vuole trovare una relazione semantica tra due (o piú) tag per poterla sfruttare nel momento in cui si generano le espansioni. Dopo aver calcolato in che misura due tag siano correlati, posso procedere ad una singola espansione tenendo conto di questa somiglianza, per esempio sommando i due vettori sumT1 e sumT2 (somma di tutti i valori di cooccorrenza della matrice 3D relativi a tutti i termini della Query stemmata). 

Per fare questo serve un modo per mettere in relazione due tag tra loro, cioé misurare la somiglianza. 

Posso fare questo in diversi modi:  
----------------------------------------
0 - É variante della 1
Raggruppo i tag dell'utente in diversi cluster (LiBao2007?) avendoli modellati con tf*idf?. 
Quindi i tag candidati all'espansione saranno distribuiti in diversi cluster. Ipoteticamente potremmo fermarci qui, effettuando un'espansione per ogni cluster, visto che useremmo tag correlati. 
Invece, possiamo analizzare ulteriormente i tag appartenenti ad ogni cluster dal punto di vista dei diversi livelli di astrazione dei tag. 
Ad esempio, in un cluster potremmo avere dei tag simili, "mp3" "radiohead" e "sigurros". Analizzando con i criteri di LiBao2007, possiamo calcolare che il livello di astrazione di "mp3" é superiore a "radiohead" e a "sigurros", che invece avranno un livello di astrazione simile. In questo modo possiamo dire che mp3 é un tag "padre" degli altri due. Ora valutiamo se é corretto fare due espansioni diverse per i tag a livello inferiore, oppure se per l'utente quei due tag hanno alti valori di co-occorrenza e quindi molto collegati. Nel secondo caso, si fa un'espansione con entrambi i tag. 


----------------------------------------
1 - Tag simili annotano url simili, e viceversa. 
Dopo che li abbiamo messi in relazione, otteniamo dei cluster di tag, e ogni cluster contiene i tag simili. 
(Dobbiamo verificare il livello gerarchico al quale si trovano tag di uno stesso cluster. Come sfrutto queste informazioni?)

Tag Clustering
ci sono diversi modi di farlo, basati su grafi o matrici di co-occorrenza e altri parametri. 
-Il sistema ELSABer (LiBao2007) sfrutta questa ipotesi: 
tag simili annotano url simili, e viceversa
quali strutture dati mi servono? 
mi servono 2 matrici: 
la C (righe: tag - colonne: url) che in ogni elemento Cij contiene il numero di utenti che ha annotato l'url j con il tag i. 
e la M (righe: tag - colonne: url) che contiene i valori tf*idf. (Potrei anche tenerne soltanto una e fare il calcolo del tf*idf quando devo estrarre il valore)
La somiglianza é calcolata con la coseno-somiglianza tra i due vettori dei tag. 
da esaminare: 
%%% TAG SINONIMI %%%
Una volta calcolata la somiglianza, posso selezionare, dai primi N tag piú simili al tag Ti, quelli che rappresentano dei sinonimi. (film, movies)
%%%
e
%%% TAG A DIVERSI LIVELLI GERARCHICI %%%
%%%

Ottenuti gli N cluster che raggruppano i tag simili tra loro, posso fare N espansioni diverse, una per ogni cluster di tag

-(alternativa per il clustering)




----------------------------------------
2 - Gerarchia di tag
costruisco una struttura dei tag globale (di tutti gli utenti), organizzata come un albero n-ario A che uso come un'ontologia. (faccio un clustering gerarchico - con Shepitsen2008 o ZhouBao2007)
Nereau produce giá dei tag candidati all'espansione (CT), basandosi sui termini della query fornita dall'utente. 
Uso questi tag e vedo dove occorrono nell'albero globale dei tag. 
(Per semplificare, posso evitare di considerare tutti i nodi figli dei tag dell'utente che capitano ai livelli piú bassi)
A questo punto, ottengo che i tag dell'utente sono mappati sull'albero globale della gerarchia dei tag. Da qui devo costruire delle espansioni, sfruttando una matrice M che modella le co-occorrenze dei tag incontrati dell'utente e l'albero A' modificato perché contenga solo i tag dell'utente. 
Ogni cammino foglia-radice potrebbe essere un'espansione candidata, ma possiamo usare un algoritmo ricorsivo che parte dalla radice dell'albero per verificare se i figli della radice hanno un'alta co-occorrenza per l'utente. In questo modo, posso capire se "spezzare" un'espansione in diverse espansioni (perché i tag dell'utente co-occorrono poco, quindi per l'utente non sono collegati->due espansioni diverse), oppure mantenere una singola espansione perché i tag hanno una forte relazione per l'utente. 


Valutare le Prestazioni

1 vs 2 vs Nereau






problemi su Eclipse 
devo avere java 1.6 come build
configurazione del db in database_config
url nereau
user postgres
password prova




git workflow
git init
git add .
git commit -m "blah blah"
con git commit -a aggiungerebbe automaticamente i file nuovi all'indice e farebbe il commit
per aggiungere il repo di github
git remote add origin git@github.com:mox601/nereau.git
e faccio il push verso il repository remoto di github
git push origin master












